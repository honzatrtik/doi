<?php

namespace DoctrineProxy\__CG__\Doi\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DoiRequest extends \Doi\Entity\DoiRequest implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setDoiId($doiId)
    {
        $this->__load();
        return parent::setDoiId($doiId);
    }

    public function getDoiId()
    {
        $this->__load();
        return parent::getDoiId();
    }

    public function setDoiRequestId($doiRequestId)
    {
        $this->__load();
        return parent::setDoiRequestId($doiRequestId);
    }

    public function getDoiRequestId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["doiRequestId"];
        }
        $this->__load();
        return parent::getDoiRequestId();
    }

    public function setIsn($isn)
    {
        $this->__load();
        return parent::setIsn($isn);
    }

    public function getIsn()
    {
        $this->__load();
        return parent::getIsn();
    }

    public function getIsnAsNumber()
    {
        $this->__load();
        return parent::getIsnAsNumber();
    }

    public function setIssue($issue)
    {
        $this->__load();
        return parent::setIssue($issue);
    }

    public function getIssue()
    {
        $this->__load();
        return parent::getIssue();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setVolume($volume)
    {
        $this->__load();
        return parent::setVolume($volume);
    }

    public function getVolume()
    {
        $this->__load();
        return parent::getVolume();
    }

    public function setDoi(\Doi\Entity\Doi $doi)
    {
        $this->__load();
        return parent::setDoi($doi);
    }

    public function getDoi()
    {
        $this->__load();
        return parent::getDoi();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'doiRequestId', 'type', 'isn', 'issue', 'volume', 'doi');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}